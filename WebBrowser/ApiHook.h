//////////////////////////////////////////////////////////////////////////
//
//	ApiHook.h
//
//	Copyright(C) 2011 Zoo
//
//////////////////////////////////////////////////////////////////////////

//	HOOK 点信息结构体
typedef struct _HOOK_STRUCT_
{
	void *srcFunction;	//		srcFunction		要HOOK的 Win32 Api 函数地址
	void *destFunction;	//		destFunction	HOOK Api 的函数地址
	void *newFunction;	//		newFunction		返回参数，正确调用源 Api 的时候，要调用的地址
	int Hooking;		//		是否正在HOOK
} HOOK_STRUCT ;


//////////////////////////////////////////////////////////////////////////
//					HookWin32ApiS
//	功能：
//		Win32 Api 加HOOK函数
//	参数：
//		hook		一个要HOOK的函数信息结构体
//	返回值：
//		0		正确返回
//		非0		失败返回
//	注意：
//	警告：
//////////////////////////////////////////////////////////////////////////
int HookWin32ApiS( HOOK_STRUCT *hook );

//////////////////////////////////////////////////////////////////////////
//					UnHookWin32ApiS
//	功能：
//		Win32 Api 解HOOK函数
//	参数：
//		hook		一个要解HOOK的函数信息结构体
//	返回值：
//		0		正确返回
//		非0		失败返回
//	注意：
//	警告：
//////////////////////////////////////////////////////////////////////////
int UnHookWin32ApiS( HOOK_STRUCT *hook );

//////////////////////////////////////////////////////////////////////////
//					HookWin32Api
//	功能：
//		Win32 Api 加HOOK函数
//	参数：
//		srcFunction		要HOOK的 Win32 Api 函数地址
//		destFunction	HOOK Api 的函数地址
//		newFunction		返回参数，正确调用源 Api 的时候，要调用的地址
//	返回值：
//		0		正确返回
//		非0		失败返回
//	注意：
//	警告：
//////////////////////////////////////////////////////////////////////////
int HookWin32Api( void *srcFunction , void *destFunction , void **newFunction );

//////////////////////////////////////////////////////////////////////////
//					UnHookWin32Api
//	功能：
//		Win32 Api 解HOOK函数
//	参数：
//		srcFunction		要解HOOK的 Win32 Api 函数地址
//	返回值：
//		0		正确返回
//		非0		失败返回
//	注意：
//	警告：
//////////////////////////////////////////////////////////////////////////
int UnHookWin32Api( void *srcFunction );